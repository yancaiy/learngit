REF_DESIGN_ROOT = $(BOARDS_ROOT)/ref_design

SUPPORTED_BOARD_VERS = 1

## Select Chip Version
BD_VER ?= 1

override BD_VER := $(strip $(BD_VER))

## Set Valid Board
VALID_BD_VER = $(call check_item_exist, $(BD_VER), $(SUPPORTED_BOARD_VERS))

## Try Check CHIP is valid
ifeq ($(VALID_BD_VER), )
$(info BOARD_VER - $(SUPPORTED_BOARD_VERS) are supported)
$(error BOARD_VER $(BD_VER) is not supported, please check it!)
endif

# link file
ifeq ($(VALID_TOOLCHAIN), mw)
LINKER_SCRIPT_FILE ?= $(REF_DESIGN_ROOT)/linker_template_mw.ld
else
LINKER_SCRIPT_FILE ?= $(REF_DESIGN_ROOT)/linker_template_gnu.ld
endif

#alps.cfg is for RDP board
OPENOCD_CFG_FILE = $(OPENOCD_SCRIPT_ROOT)/board/alps.cfg
#snps_em_sk_v2.2.cfg is for validation board using GNU
#OPENOCD_CFG_FILE = $(OPENOCD_SCRIPT_ROOT)/board/snps_em_sk_v2.2.cfg

# UART setting
USE_UART0 ?= 1
CHIP_CONSOLE_UART_BAUD ?= 921600
#UART0_IO_POS ?= 0
USE_UART1 ?= 0
#UART1_IO_POS ?= 1

#SPI setting
USE_SPI0 ?= 0
USE_SPI1 ?= 0
USE_SPI2 ?= 0

#qspi setting
USE_QSPI ?= 1

#CAN setting
USE_CAN0 ?= 0
USE_CAN1 ?= 0
USE_CAN_FD ?= 0

# CAN TX work mode
#    0: using polling mode
#    1: using interrupt mode
CAN_TX_INT_MODE ?= 0

ifeq ($(IO_STREAM_SKIP),)
#IO STREAM setting
USE_IO_STREAM ?= 0
USE_IO_STREAM_PRINTF ?= 0
else
USE_IO_STREAM ?= 0
USE_IO_STREAM_PRINTF ?= 0
endif

USE_SW_TRACE ?= 1
SW_TRACE_BASE ?= 0xa00000
SW_TRACE_LEN ?= 0x8000

#Firmware use enhance cache in arc_startup.s
FIRMWARE_USE_ENHANCE_CACHE ?= 1

#AHB DMA
USE_AHB_DMA ?= 1
BOARD_DEFINES += -DUSE_DW_AHB_DMA=$(USE_AHB_DMA)

BOARD_DEFINES += -DUSE_DW_UART_0=$(USE_UART0) -DUSE_DW_UART_1=$(USE_UART1) -DCHIP_CONSOLE_UART_BAUD=$(CHIP_CONSOLE_UART_BAUD)

BOARD_DEFINES += -DUART0_IO_POS=$(UART0_IO_POS) -DUART1_IO_POS=$(UART1_IO_POS)

BOARD_DEFINES += -DUSE_DW_SPI_0=$(USE_SPI0) -DUSE_DW_SPI_1=$(USE_SPI1) -DUSE_DW_SPI_2=$(USE_SPI2)

BOARD_DEFINES += -DUSE_DW_QSPI=$(USE_QSPI) -DFLASH_XIP_EN=$(FLASH_XIP)

BOARD_DEFINES += -DUSE_CAN_0=$(USE_CAN0) -DUSE_CAN_1=$(USE_CAN1) -DUSE_CAN_FD=$(USE_CAN_FD)

BOARD_DEFINES += -DUSE_IO_STREAM=$(USE_IO_STREAM) -DIO_STREAM_PRINTF=$(USE_IO_STREAM_PRINTF)

BOARD_DEFINES += -DCAN_TX_INT_MODE=$(CAN_TX_INT_MODE)

#BOARD_DEFINES += -DUSE_XIP=$(USE_XIP)
ifneq ($(CHIP_CASCADE),)
BOARD_DEFINES += -DCHIP_CASCADE
endif

BOARD_DEFINES += -DPLL_CLOCK_OPEN_EN=$(PLL_CLOCK_OPEN)

BOARD_DEFINES += -DCONSOLE_PRINTF

BOARD_DEFINES += -DSYSTEM_$(SYSTEM_BOOT_STAGE)_STAGES_BOOT
BOARD_DEFINES += -D__FIRMWARE__

ifneq ($(USE_SW_TRACE),)
BOARD_DEFINES += -DUSE_SW_TRACE -DSW_TRACE_BASE=$(SW_TRACE_BASE) -DSW_TRACE_LEN=$(SW_TRACE_LEN)
endif

ifneq ($(UART_OTA),)
BOARD_DEFINES += -DSYSTEM_UART_OTA
endif

ifneq ($(SYSTEM_WATCHDOG),)
BOARD_DEFINES += -DSYSTEM_WATCHDOG
endif

ifneq ($(SPIS_SERVER_ON),)
BOARD_DEFINES += -DSPIS_SERVER
endif

###################################################################
# function safety config 
# MUST set FUNC_SAFETY_CONF=1 if open function safety
# then you must config SM_xxx item ON/OFFï¼Œif not,it's default off
ifneq ($(FUNC_SAFETY_CONF),)
BOARD_DEFINES += -DFUNC_SAFETY=$(FUNC_SAFETY_CONF)
endif
#===============================================
ifneq ($(FUNC_SAFETY_CLI),)
BOARD_DEFINES += -DFUNC_SAFETY_CLI=$(FUNC_SAFETY_CLI)
endif
#===============================================
ifneq ($(SAFETY_FEATURE_SM1),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM1=$(SAFETY_FEATURE_SM1)
endif
ifneq ($(SAFETY_FEATURE_SM2),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM2=$(SAFETY_FEATURE_SM2)
endif
ifneq ($(SAFETY_FEATURE_SM3),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM3=$(SAFETY_FEATURE_SM3)
endif
ifneq ($(SAFETY_FEATURE_SM4),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM4=$(SAFETY_FEATURE_SM4)
endif
ifneq ($(SAFETY_FEATURE_SM5),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM5=$(SAFETY_FEATURE_SM5)
endif
ifneq ($(SAFETY_FEATURE_SM6),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM6=$(SAFETY_FEATURE_SM6)
endif
ifneq ($(SAFETY_FEATURE_SM8),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM8=$(SAFETY_FEATURE_SM8)
endif
ifneq ($(SAFETY_FEATURE_SM11),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM11=$(SAFETY_FEATURE_SM11)
endif
ifneq ($(SAFETY_FEATURE_SM12),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM12=$(SAFETY_FEATURE_SM12)
endif
ifneq ($(SAFETY_FEATURE_SM13),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM13=$(SAFETY_FEATURE_SM13)
endif
ifneq ($(SAFETY_FEATURE_SM14),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM14=$(SAFETY_FEATURE_SM14)
endif
ifneq ($(SAFETY_FEATURE_SM101),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM101=$(SAFETY_FEATURE_SM101)
endif
ifneq ($(SAFETY_FEATURE_SM102),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM102=$(SAFETY_FEATURE_SM102)
endif
ifneq ($(SAFETY_FEATURE_SM103),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM103=$(SAFETY_FEATURE_SM103)
endif
ifneq ($(SAFETY_FEATURE_SM104),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM104=$(SAFETY_FEATURE_SM104)
endif
ifneq ($(SAFETY_FEATURE_SM105),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM105=$(SAFETY_FEATURE_SM105)
endif
ifneq ($(SAFETY_FEATURE_SM106),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM106=$(SAFETY_FEATURE_SM106)
endif
ifneq ($(SAFETY_FEATURE_SM107),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM107=$(SAFETY_FEATURE_SM107)
endif
ifneq ($(SAFETY_FEATURE_SM108),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM108=$(SAFETY_FEATURE_SM108)
endif
ifneq ($(SAFETY_FEATURE_SM109),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM109=$(SAFETY_FEATURE_SM109)
endif
ifneq ($(SAFETY_FEATURE_SM120),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM120=$(SAFETY_FEATURE_SM120)
endif
ifneq ($(SAFETY_FEATURE_SM121),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM121=$(SAFETY_FEATURE_SM121)
endif
ifneq ($(SAFETY_FEATURE_SM122),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM122=$(SAFETY_FEATURE_SM122)
endif
ifneq ($(SAFETY_FEATURE_SM123),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM123=$(SAFETY_FEATURE_SM123)
endif
ifneq ($(SAFETY_FEATURE_SM124),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM124=$(SAFETY_FEATURE_SM124)
endif
ifneq ($(SAFETY_FEATURE_SM125),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM125=$(SAFETY_FEATURE_SM125)
endif
ifneq ($(SAFETY_FEATURE_SM126),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM126=$(SAFETY_FEATURE_SM126)
endif
ifneq ($(SAFETY_FEATURE_SM129),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM129=$(SAFETY_FEATURE_SM129)
endif
ifneq ($(SAFETY_FEATURE_SM130),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM130=$(SAFETY_FEATURE_SM130)
endif
ifneq ($(SAFETY_FEATURE_SM133),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM133=$(SAFETY_FEATURE_SM133)
endif
ifneq ($(SAFETY_FEATURE_SM201),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM201=$(SAFETY_FEATURE_SM201)
endif
ifneq ($(SAFETY_FEATURE_SM202),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM202=$(SAFETY_FEATURE_SM202)
endif
ifneq ($(SAFETY_FEATURE_SM206),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM206=$(SAFETY_FEATURE_SM206)
endif
ifneq ($(SAFETY_FEATURE_SM805),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM805=$(SAFETY_FEATURE_SM805)
endif
ifneq ($(SAFETY_FEATURE_SM901),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM901=$(SAFETY_FEATURE_SM901)
endif
ifneq ($(SAFETY_FEATURE_SM902),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM902=$(SAFETY_FEATURE_SM902)
endif
ifneq ($(SAFETY_FEATURE_SM904),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM904=$(SAFETY_FEATURE_SM904)
endif
ifneq ($(SAFETY_FEATURE_SM905),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM905=$(SAFETY_FEATURE_SM905)
endif
ifneq ($(SAFETY_FEATURE_SM906),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM906=$(SAFETY_FEATURE_SM906)
endif
ifneq ($(SAFETY_FEATURE_SM907),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM907=$(SAFETY_FEATURE_SM907)
endif
ifneq ($(SAFETY_FEATURE_SM908),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM908=$(SAFETY_FEATURE_SM908)
endif
ifneq ($(SAFETY_FEATURE_SM910),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM910=$(SAFETY_FEATURE_SM910)
endif
ifneq ($(SAFETY_FEATURE_SM911),)
BOARD_DEFINES += -DSAFETY_FEATURE_SM911=$(SAFETY_FEATURE_SM911)
endif
###################################################################
ifneq ($(CPU_CLOCK_LOCK_DETECTOR),)
BOARD_DEFINES += -DCPU_CLOCK_LOCK_DETECTOR
endif

ifneq ($(FLASH_STATIC_PARAM), )
BOARD_DEFINES += -DSTATIC_EXT_FLASH_PARAM
endif

ifneq ($(FIRMWARE_USE_ENHANCE_CACHE), )
BOARD_DEFINES += -DFIRMWARE_USE_ENHANCE_CACHE=$(FIRMWARE_USE_ENHANCE_CACHE)
endif

ifneq ($(CPU_STAT),)
BOARD_DEFINES += -DCPU_STAT
endif