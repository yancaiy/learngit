#ifndef XIP_REG_H
#define XIP_REG_H

#define REG_FLASH_XIP_BASE					(0x00D00000U)

#define REG_FLASH_XIP_XER_OFFSET			(0x0100)
#define REG_FLASH_XIP_XRDSRCR_OFFSET		(0x0104)
#define REG_FLASH_XIP_XRDCR_OFFSET			(0x0108)
#define REG_FLASH_XIP_XWENACR_OFFSET		(0x010C)
#define REG_FLASH_XIP_XWECR_OFFSET			(0x0110)
#define REG_FLASH_XIP_XSSCR_OFFSET			(0x0114)
#define REG_FLASH_XIP_XRDFSRCR_OFFSET		(0x0118)
#define REG_FLASH_XIP_XISOR_OFFSET			(0x011C)
#define REG_FLASH_XIP_XDSOR_OFFSET			(0x0120)

#define REG_FLASH_XIP_AMR_OFFSET			(0x0124)
#define REG_FLASH_XIP_ACDMR_OFFSET			(0x0128)
#define REG_FLASH_XIP_ARSR_OFFSET			(0x012C)
#define REG_FLASH_XIP_ATWR_OFFSET(x)		(0x0130 + ((x) << 2))

#define REG_FLASH_XIP_AVBR_OFFSET			(0x0140)
#define REG_FLASH_XIP_ALBSR_OFFSET			(0x0144)
#define REG_FLASH_XIP_AIDR_OFFSET(x)		(0x0148 + ((x) << 2))

#define REG_FLASH_XIP_AWER_OFFSET			(0x0188)
#define REG_FLASH_XIP_ANSR_OFFSET			(0x018C)
#define REG_FLASH_XIP_AIDVR_OFFSET			(0x0190)
#define REG_FLASH_XIP_ADSR_OFFSET			(0x0194)
#define REG_FLASH_XIP_AODR_OFFSET(x)		(0x0198 + ((x) << 2))

#define REG_FLASH_XIP_XABECR_OFFSET			(0x01D8)
#define REG_FLASH_XIP_XADBECR_OFFSET		(0x01DC)
#define REG_FLASH_XIP_XIBCR_OFFSET			(0x01E0)
#define REG_FLASH_XIP_XRBCR_OFFSET			(0x01E4)
#define REG_FLASH_XIP_XWBCR_OFFSET			(0x01E8)
#define REG_FLASH_XIP_XWIPCR_OFFSET			(0x01EC)
#define REG_FLASH_XIP_XXBCR_OFFSET			(0x01F0)
#define REG_FLASH_XIP_XXLCR_OFFSET			(0x01F4)
#define REG_FLASH_XIP_XEFBR_OFFSET			(0x01F8)
#define REG_FLASH_XIP_XPFBR_OFFSET			(0x01FC)


#define BITS_FLASH_XIP_CMD_INS_LEN_MASK		(0x3)
#define BITS_FLASH_XIP_CMD_INS_LEN_SHIFT	(25)
#define BITS_FLASH_XIP_CMD_ADDR_LEN_MASK	(0xF)
#define BITS_FLASH_XIP_CMD_ADDR_LEN_SHIFT	(21)
#define BITS_FLASH_XIP_CMD_DFS_MASK			(0x1F)
#define BITS_FLASH_XIP_CMD_DFS_SHIFT		(16)



#define BITS_XIP_WORD_SWAP_SHIFT			(2)
#define BITS_XIP_BYTE_SWAP_SHIFT			(1)
#define BITS_XIP_BIT_SWA_SHIFT				(0)

#define BITS_XIP_WR_ENDIAN_SHIFT			(2)
#define BITS_XIP_RD_ENDIAN_SHIFT			(0)


/* define AHB endian */
#define XIP_RD_HALF_WORD_SWAP				(XIP_BIG_ENDIAN)
#define XIP_RD_BYTE_SWAP					(XIP_BIG_ENDIAN)
#define XIP_WR_HALF_WORD_WAAP				(XIP_BIG_ENDIAN)
#define XIP_WR_BYTE_WAAP					(XIP_BIG_ENDIAN)


/* define AES endian */
#define XIP_WORD_SWAP						(XIP_LIT_ENDIAN)
#define XIP_BYTE_SWAP						(XIP_LIT_ENDIAN)
#define XIP_BIT_SWAP						(XIP_LIT_ENDIAN)


/* The configuration parameters of XIP register are used to flash header and boot */
#define XIP_CONFIG_CTRL0					CLK_MODE0_SSI_CTRL0(QUAD_FRAME_FORMAT, DW_SSI_DATA_LEN_32, DW_SSI_RECEIVE_ONLY)
#define XIP_CONFIG_CTRL1					(0x7FF)
#define XIP_CONFIG_BAUD						(0xA)
#define XIP_CONFIG_RX_SAMPLE_DELAY			FLASH_DEV_SAMPLE_DELAY
#define XIP_CONFIG_SPI_CTRL					SSI_SPI_CTRLR0(FLASH_DEV_DUMMY_CYCLE + FLASH_DEV_MODE_CYCLE, DW_SSI_INS_LEN_8, DW_SSI_ADDR_LEN_24, DW_SSI_1_X_X)
#define XIP_CONFIG_READ_CMD					FLASH_COMMAND(CMD_Q_READ, DW_SSI_INS_LEN_8, DW_SSI_ADDR_LEN_24, DW_SSI_DATA_LEN_32)
#define XIP_CONFIG_INS_OFFSET				FLASH_HEADER_BASE
#define XIP_CONFIG_DATA_OFFSET				FLASH_HEADER_BASE

#define XIP_CONFIG_AHB_ENDIAN				((((XIP_WR_HALF_WORD_WAAP << 1) | XIP_WR_BYTE_WAAP) << BITS_XIP_WR_ENDIAN_SHIFT) | \
											(((XIP_RD_HALF_WORD_SWAP << 1) | XIP_RD_BYTE_SWAP) << BITS_XIP_RD_ENDIAN_SHIFT))

#define XIP_CONFIG_AES_ENDIAN				((XIP_WORD_SWAP << BITS_XIP_WORD_SWAP_SHIFT) | \
											(XIP_BYTE_SWAP << BITS_XIP_BYTE_SWAP_SHIFT) | \
											(XIP_BIT_SWAP << BITS_XIP_BIT_SWA_SHIFT))

#define XIP_CONFIG_INS_RX_BUF_LEN			CONFIG_XIP_INS_BUF_LEN
#define XIP_CONFIG_DATA_RX_BUF_LEN			CONFIG_XIP_RD_BUF_LEN
#define XIP_CONFIG_DATA_RX_BUF_LEN			CONFIG_XIP_RD_BUF_LEN

#define XIP_CONFIG_AES_MODE_XIP_ACCESS		(0x07)
#define XIP_CONFIG_AES_MODE_CPU_ACCESS		(0x0)

#define XIP_CONFIG_BLOCK_CNT				CONFIG_AES_VLD_BLK_CNT
#define XIP_CONFIG_LAST_BLOCK_SIZE			CONFIG_AES_LAST_BLK_SIZE

#endif
